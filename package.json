{
  "name": "frame",
  "version": "0.5.0-beta.1",
  "description": "System-wide web3",
  "main": "main",
  "build": {
    "appId": "sh.frame.app",
    "afterSign": "./build/notarize.js",
    "productName": "Frame",
    "linux": {
      "target": [
        "AppImage",
        "deb",
        "snap",
        "tar.gz"
      ]
    },
    "mac": {
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "entitlements": "build/entitlements.mac.plist"
    },
    "win": {},
    "files": [
      "main",
      "bundle"
    ]
  },
  "scripts": {
    "start": "npm run launch",
    "bundle": "npm run bundle:bridge && npm run bundle:tray && npm run bundle:dash  && npm run bundle:dapp && npm run bundle:dapp:inject",
    "bundle:bridge": "parcel build resources/bridge/index.js --public-url . -d bundle -o bridge.js --target electron",
    "bundle:tray": "parcel build app/tray.html --public-url . -d bundle --target browser",
    "bundle:flow": "parcel build flow/flow.html --public-url . -d bundle --target browser",
    "bundle:dash": "parcel build dash/dash.html --public-url . -d bundle --target browser",
    "bundle:dapp": "parcel build dapp/dapp.html --public-url . -d bundle --target browser",
    "bundle:dapp:inject": "parcel build main/dapps/server/inject/index.js --public-url . -d bundle -o inject.js --target browser",
    "watch": "npm run watch:tray & npm run watch:dash & npm run watch:dapp & npm run watch:bridge & npm run watch:dapp:inject",
    "watch:bridge": "parcel watch resources/bridge/index.js --public-url . -d bundle -o bridge.js --target electron --no-hmr",
    "watch:tray": "parcel watch app/tray.html --public-url . -d bundle --target browser --no-hmr",
    "watch:flow": "parcel watch flow/flow.html --public-url . -d bundle --target browser --no-hmr",
    "watch:dash": "parcel watch dash/dash.html --public-url . -d bundle --target browser --no-hmr",
    "watch:dapp": "parcel watch dapp/dapp.html --public-url . -d bundle --target browser --no-hmr",
    "watch:dapp:inject": "parcel watch main/dapps/server/inject/index.js --public-url . -d bundle -o inject.js --target browser",
    "dev": "npm run bundle && npm run launch:dev",
    "inspect": "npm run bundle && npm run launch:inspect",
    "launch": "cross-env NODE_ENV=production electron ./main",
    "launch:dev": "cross-env NODE_ENV=development electron ./main --inspect",
    "launch:dev:traffic": "cross-env NODE_ENV=development LOG_TRAFFIC=true electron ./main",
    "launch:dev:fullheight": "cross-env NODE_ENV=development FULL_HEIGHT=true electron ./main",
    "launch:dev:worker": "cross-env NODE_ENV=development LOG_WORKER=true electron ./main",
    "launch:dev:rinkeby": "cross-env NODE_ENV=development RINKEBY=true electron ./main",
    "launch:inspect": "cross-env NODE_ENV=production electron --inspect ./main",
    "prod": "npm run bundle && npm run launch",
    "hot": "npm run bundle && npm run launch:hot",
    "clean": "rimraf dist bundle .cache package-lock.json \"node_modules/!(rimraf|.bin)\" && npm cache clean --force && npm install && npm audit fix && npm run bundle",
    "scrub": "rimraf dist bundle .cache \"node_modules/!(rimraf|.bin)\" && npm install",
    "build": "npm run bundle && sleep 4 && electron-builder",
    "release": "npm run bundle && sleep 4 && electron-builder -c.snap.publish=github",
    "postinstall": "electron-builder install-app-deps",
    "test": "jest --env=node --detectOpenHandles --runInBand",
    "standard": "standardx --fix --verbose",
    "test:clients": "mocha test/clients/*.test.js",
    "local:rpc": "ganache-cli --account=\"0x2d6945dbddb8dcf5492004e6f720f8e971196ff61a61c4be99714ebc71e06c00,  5000000000000000000000\" --account=\"0xaef6a68a47c1628081e4e6df195f5f712ae4eb7da332a6d74dca06ae32a3e7ae,5000\""
  },
  "jest": {
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/build/",
      "/bundle/",
      "/dist/"
    ]
  },
  "author": {
    "name": "Jordan Muir",
    "email": "jordan@frame.sh",
    "url": "https://frame.sh"
  },
  "license": "GPL-3.0",
  "dependencies": {
    "@aragon/wrapper": "5.0.0",
    "@ethersproject/abi": "5.3.1",
    "@ethersproject/hash": "5.3.0",
    "@githubprimer/octicons-react": "8.5.0",
    "@ledgerhq/hw-app-eth": "6.0.2",
    "@ledgerhq/hw-transport-node-hid": "6.0.2",
    "@ledgerhq/hw-transport-web-ble": "6.0.2",
    "@makerdao/multicall": "0.12.0",
    "abi-codec": "0.0.9",
    "auto-launch": "5.0.5",
    "axios": "0.21.1",
    "babel-polyfill": "6.26.0",
    "bip39": "3.0.4",
    "cheerio": "1.0.0-rc.10",
    "conf": "10.0.1",
    "content-hash": "2.5.2",
    "cross-env": "7.0.3",
    "electron-log": "4.3.5",
    "electron-positioner": "4.1.0",
    "electron-updater": "4.3.9",
    "eth-ens-namehash": "2.0.8",
    "eth-provider": "0.7.0",
    "eth-sig-util": "3.0.1",
    "ethereum-public-key-to-address": "0.0.5",
    "ethereumjs-abi": "0.6.8",
    "ethereumjs-tx": "1.3.7",
    "ethereumjs-util": "7.0.10",
    "ethereumjs-wallet": "1.0.1",
    "extract-zip": "2.0.1",
    "fs-extra": "10.0.0",
    "get-pixels": "3.3.2",
    "gridplus-sdk": "0.7.24",
    "hdkey": "2.0.1",
    "ipfs-core": "0.8.0",
    "ipfs-http-client": "50.1.2",
    "nebula": "0.0.3",
    "node-fetch": "2.6.1",
    "node-hid": "2.1.1",
    "query-string": "7.0.1",
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "react-restore": "^0.5.0",
    "react-transition-group": "4.4.2",
    "semver": "7.3.5",
    "tar": "6.1.0",
    "trezor-connect": "8.1.27",
    "usb": "1.7.1",
    "uuid": "8.3.2",
    "web3-utils": "1.3.6",
    "ws": "7.5.0",
    "zxcvbn": "4.4.2"
  },
  "devDependencies": {
    "@babel/core": "7.14.6",
    "@babel/plugin-proposal-decorators": "7.14.5",
    "@babel/plugin-proposal-do-expressions": "7.14.5",
    "@babel/plugin-proposal-export-default-from": "7.14.5",
    "@babel/plugin-proposal-function-bind": "7.14.5",
    "@babel/plugin-proposal-function-sent": "7.14.5",
    "@babel/plugin-proposal-pipeline-operator": "7.14.5",
    "@babel/plugin-proposal-throw-expressions": "7.14.5",
    "@babel/plugin-syntax-import-meta": "7.10.4",
    "@babel/preset-env": "7.14.5",
    "@babel/preset-react": "7.14.5",
    "babel-eslint": "10.1.0",
    "cli-sleep": "1.0.1",
    "electron": "13.1.3",
    "electron-builder": "22.11.7",
    "electron-notarize": "1.0.0",
    "ganache-cli": "6.12.2",
    "jest": "27.0.4",
    "node-watch": "0.7.1",
    "parcel-bundler": "1.12.3",
    "standardx": "7.0.0",
    "stylus": "0.54.8"
  },
  "standard": {
    "parser": "babel-eslint",
    "env": [
      "jest"
    ]
  },
  "eslintConfig": {
    "rules": {
      "multiline-ternary": 0,
      "react/no-direct-mutation-state": 0,
      "react/no-find-dom-node": 0
    }
  },
  "repository": "github:floating/frame"
}
